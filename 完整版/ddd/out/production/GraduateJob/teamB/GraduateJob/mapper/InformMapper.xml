<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="teamB.GraduateJob.mapper.InformMapper" >
  <resultMap id="BaseResultMap" type="teamB.GraduateJob.po.Inform" >
    <id column="contactId" property="contactid" jdbcType="INTEGER" />
    <result column="machineNumber" property="machinenumber" jdbcType="CHAR" />
    <result column="phoneNumber" property="phonenumber" jdbcType="CHAR" />
    <result column="contactName" property="contactname" jdbcType="CHAR" />
    <result column="contactEmail" property="contactemail" jdbcType="CHAR" />
    <result column="qq" property="qq" jdbcType="CHAR" />
    <result column="address" property="address" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    contactId, machineNumber, phoneNumber, contactName, contactEmail, qq, address
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="teamB.GraduateJob.po.InformExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from inform
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from inform
    where contactId = #{contactid,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from inform
    where contactId = #{contactid,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="teamB.GraduateJob.po.InformExample" >
    delete from inform
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="teamB.GraduateJob.po.Inform" >
    insert into inform (contactId, machineNumber, phoneNumber, 
      contactName, contactEmail, qq, 
      address)
    values (#{contactid,jdbcType=INTEGER}, #{machinenumber,jdbcType=CHAR}, #{phonenumber,jdbcType=CHAR}, 
      #{contactname,jdbcType=CHAR}, #{contactemail,jdbcType=CHAR}, #{qq,jdbcType=CHAR}, 
      #{address,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="teamB.GraduateJob.po.Inform" >
    insert into inform
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="contactid != null" >
        contactId,
      </if>
      <if test="machinenumber != null" >
        machineNumber,
      </if>
      <if test="phonenumber != null" >
        phoneNumber,
      </if>
      <if test="contactname != null" >
        contactName,
      </if>
      <if test="contactemail != null" >
        contactEmail,
      </if>
      <if test="qq != null" >
        qq,
      </if>
      <if test="address != null" >
        address,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="contactid != null" >
        #{contactid,jdbcType=INTEGER},
      </if>
      <if test="machinenumber != null" >
        #{machinenumber,jdbcType=CHAR},
      </if>
      <if test="phonenumber != null" >
        #{phonenumber,jdbcType=CHAR},
      </if>
      <if test="contactname != null" >
        #{contactname,jdbcType=CHAR},
      </if>
      <if test="contactemail != null" >
        #{contactemail,jdbcType=CHAR},
      </if>
      <if test="qq != null" >
        #{qq,jdbcType=CHAR},
      </if>
      <if test="address != null" >
        #{address,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="teamB.GraduateJob.po.InformExample" resultType="java.lang.Integer" >
    select count(*) from inform
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update inform
    <set >
      <if test="record.contactid != null" >
        contactId = #{record.contactid,jdbcType=INTEGER},
      </if>
      <if test="record.machinenumber != null" >
        machineNumber = #{record.machinenumber,jdbcType=CHAR},
      </if>
      <if test="record.phonenumber != null" >
        phoneNumber = #{record.phonenumber,jdbcType=CHAR},
      </if>
      <if test="record.contactname != null" >
        contactName = #{record.contactname,jdbcType=CHAR},
      </if>
      <if test="record.contactemail != null" >
        contactEmail = #{record.contactemail,jdbcType=CHAR},
      </if>
      <if test="record.qq != null" >
        qq = #{record.qq,jdbcType=CHAR},
      </if>
      <if test="record.address != null" >
        address = #{record.address,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update inform
    set contactId = #{record.contactid,jdbcType=INTEGER},
      machineNumber = #{record.machinenumber,jdbcType=CHAR},
      phoneNumber = #{record.phonenumber,jdbcType=CHAR},
      contactName = #{record.contactname,jdbcType=CHAR},
      contactEmail = #{record.contactemail,jdbcType=CHAR},
      qq = #{record.qq,jdbcType=CHAR},
      address = #{record.address,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="teamB.GraduateJob.po.Inform" >
    update inform
    <set >
      <if test="machinenumber != null" >
        machineNumber = #{machinenumber,jdbcType=CHAR},
      </if>
      <if test="phonenumber != null" >
        phoneNumber = #{phonenumber,jdbcType=CHAR},
      </if>
      <if test="contactname != null" >
        contactName = #{contactname,jdbcType=CHAR},
      </if>
      <if test="contactemail != null" >
        contactEmail = #{contactemail,jdbcType=CHAR},
      </if>
      <if test="qq != null" >
        qq = #{qq,jdbcType=CHAR},
      </if>
      <if test="address != null" >
        address = #{address,jdbcType=VARCHAR},
      </if>
    </set>
    where contactId = #{contactid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="teamB.GraduateJob.po.Inform" >
    update inform
    set machineNumber = #{machinenumber,jdbcType=CHAR},
      phoneNumber = #{phonenumber,jdbcType=CHAR},
      contactName = #{contactname,jdbcType=CHAR},
      contactEmail = #{contactemail,jdbcType=CHAR},
      qq = #{qq,jdbcType=CHAR},
      address = #{address,jdbcType=VARCHAR}
    where contactId = #{contactid,jdbcType=INTEGER}
  </update>
</mapper>