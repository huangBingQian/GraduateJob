<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="teamB.GraduateJob.mapper.TalkMapper" >
  <resultMap id="BaseResultMap" type="teamB.GraduateJob.po.Talk" >
    <id column="talkId" property="talkid" jdbcType="INTEGER" />
    <result column="theme" property="theme" jdbcType="CHAR" />
    <result column="expectNumber" property="expectnumber" jdbcType="CHAR" />
    <result column="expectTime" property="expecttime" jdbcType="CHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    talkId, theme, expectNumber, expectTime
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="teamB.GraduateJob.po.TalkExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from talk
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from talk
    where talkId = #{talkid,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from talk
    where talkId = #{talkid,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="teamB.GraduateJob.po.TalkExample" >
    delete from talk
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="teamB.GraduateJob.po.Talk" >
    insert into talk (talkId, theme, expectNumber, 
      expectTime)
    values (#{talkid,jdbcType=INTEGER}, #{theme,jdbcType=CHAR}, #{expectnumber,jdbcType=CHAR}, 
      #{expecttime,jdbcType=CHAR})
  </insert>
  <insert id="insertSelective" parameterType="teamB.GraduateJob.po.Talk" >
    insert into talk
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="talkid != null" >
        talkId,
      </if>
      <if test="theme != null" >
        theme,
      </if>
      <if test="expectnumber != null" >
        expectNumber,
      </if>
      <if test="expecttime != null" >
        expectTime,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="talkid != null" >
        #{talkid,jdbcType=INTEGER},
      </if>
      <if test="theme != null" >
        #{theme,jdbcType=CHAR},
      </if>
      <if test="expectnumber != null" >
        #{expectnumber,jdbcType=CHAR},
      </if>
      <if test="expecttime != null" >
        #{expecttime,jdbcType=CHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="teamB.GraduateJob.po.TalkExample" resultType="java.lang.Integer" >
    select count(*) from talk
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update talk
    <set >
      <if test="record.talkid != null" >
        talkId = #{record.talkid,jdbcType=INTEGER},
      </if>
      <if test="record.theme != null" >
        theme = #{record.theme,jdbcType=CHAR},
      </if>
      <if test="record.expectnumber != null" >
        expectNumber = #{record.expectnumber,jdbcType=CHAR},
      </if>
      <if test="record.expecttime != null" >
        expectTime = #{record.expecttime,jdbcType=CHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update talk
    set talkId = #{record.talkid,jdbcType=INTEGER},
      theme = #{record.theme,jdbcType=CHAR},
      expectNumber = #{record.expectnumber,jdbcType=CHAR},
      expectTime = #{record.expecttime,jdbcType=CHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="teamB.GraduateJob.po.Talk" >
    update talk
    <set >
      <if test="theme != null" >
        theme = #{theme,jdbcType=CHAR},
      </if>
      <if test="expectnumber != null" >
        expectNumber = #{expectnumber,jdbcType=CHAR},
      </if>
      <if test="expecttime != null" >
        expectTime = #{expecttime,jdbcType=CHAR},
      </if>
    </set>
    where talkId = #{talkid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="teamB.GraduateJob.po.Talk" >
    update talk
    set theme = #{theme,jdbcType=CHAR},
      expectNumber = #{expectnumber,jdbcType=CHAR},
      expectTime = #{expecttime,jdbcType=CHAR}
    where talkId = #{talkid,jdbcType=INTEGER}
  </update>
</mapper>