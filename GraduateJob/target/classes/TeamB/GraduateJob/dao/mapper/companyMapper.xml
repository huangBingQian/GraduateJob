<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="TeamB.GraduateJob.dao.mapper.companyMapper" >
  <resultMap id="BaseResultMap" type="TeamB.GraduateJob.po.company" >
    <id column="companyName" property="companyname" jdbcType="VARCHAR" />
    <result column="companyPlace" property="companyplace" jdbcType="VARCHAR" />
    <result column="companyCharacter" property="companycharacter" jdbcType="VARCHAR" />
    <result column="hangYe" property="hangye" jdbcType="VARCHAR" />
  </resultMap>
  <resultMap id="ResultMapWithBLOBs" type="TeamB.GraduateJob.po.company" extends="BaseResultMap" >
    <result column="inform" property="inform" jdbcType="LONGVARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    companyName, companyPlace, companyCharacter, hangYe
  </sql>
  <sql id="Blob_Column_List" >
    inform
  </sql>
  <select id="selectByExampleWithBLOBs" resultMap="ResultMapWithBLOBs" parameterType="TeamB.GraduateJob.po.companyExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from company
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="TeamB.GraduateJob.po.companyExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from company
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="ResultMapWithBLOBs" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from company
    where companyName = #{companyname,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from company
    where companyName = #{companyname,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="TeamB.GraduateJob.po.companyExample" >
    delete from company
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="TeamB.GraduateJob.po.company" >
    insert into company (companyName, companyPlace, companyCharacter, 
      hangYe, inform)
    values (#{companyname,jdbcType=VARCHAR}, #{companyplace,jdbcType=VARCHAR}, #{companycharacter,jdbcType=VARCHAR}, 
      #{hangye,jdbcType=VARCHAR}, #{inform,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="TeamB.GraduateJob.po.company" >
    insert into company
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="companyname != null" >
        companyName,
      </if>
      <if test="companyplace != null" >
        companyPlace,
      </if>
      <if test="companycharacter != null" >
        companyCharacter,
      </if>
      <if test="hangye != null" >
        hangYe,
      </if>
      <if test="inform != null" >
        inform,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="companyname != null" >
        #{companyname,jdbcType=VARCHAR},
      </if>
      <if test="companyplace != null" >
        #{companyplace,jdbcType=VARCHAR},
      </if>
      <if test="companycharacter != null" >
        #{companycharacter,jdbcType=VARCHAR},
      </if>
      <if test="hangye != null" >
        #{hangye,jdbcType=VARCHAR},
      </if>
      <if test="inform != null" >
        #{inform,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="TeamB.GraduateJob.po.companyExample" resultType="java.lang.Integer" >
    select count(*) from company
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update company
    <set >
      <if test="record.companyname != null" >
        companyName = #{record.companyname,jdbcType=VARCHAR},
      </if>
      <if test="record.companyplace != null" >
        companyPlace = #{record.companyplace,jdbcType=VARCHAR},
      </if>
      <if test="record.companycharacter != null" >
        companyCharacter = #{record.companycharacter,jdbcType=VARCHAR},
      </if>
      <if test="record.hangye != null" >
        hangYe = #{record.hangye,jdbcType=VARCHAR},
      </if>
      <if test="record.inform != null" >
        inform = #{record.inform,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map" >
    update company
    set companyName = #{record.companyname,jdbcType=VARCHAR},
      companyPlace = #{record.companyplace,jdbcType=VARCHAR},
      companyCharacter = #{record.companycharacter,jdbcType=VARCHAR},
      hangYe = #{record.hangye,jdbcType=VARCHAR},
      inform = #{record.inform,jdbcType=LONGVARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update company
    set companyName = #{record.companyname,jdbcType=VARCHAR},
      companyPlace = #{record.companyplace,jdbcType=VARCHAR},
      companyCharacter = #{record.companycharacter,jdbcType=VARCHAR},
      hangYe = #{record.hangye,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="TeamB.GraduateJob.po.company" >
    update company
    <set >
      <if test="companyplace != null" >
        companyPlace = #{companyplace,jdbcType=VARCHAR},
      </if>
      <if test="companycharacter != null" >
        companyCharacter = #{companycharacter,jdbcType=VARCHAR},
      </if>
      <if test="hangye != null" >
        hangYe = #{hangye,jdbcType=VARCHAR},
      </if>
      <if test="inform != null" >
        inform = #{inform,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where companyName = #{companyname,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="TeamB.GraduateJob.po.company" >
    update company
    set companyPlace = #{companyplace,jdbcType=VARCHAR},
      companyCharacter = #{companycharacter,jdbcType=VARCHAR},
      hangYe = #{hangye,jdbcType=VARCHAR},
      inform = #{inform,jdbcType=LONGVARCHAR}
    where companyName = #{companyname,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="TeamB.GraduateJob.po.company" >
    update company
    set companyPlace = #{companyplace,jdbcType=VARCHAR},
      companyCharacter = #{companycharacter,jdbcType=VARCHAR},
      hangYe = #{hangye,jdbcType=VARCHAR}
    where companyName = #{companyname,jdbcType=VARCHAR}
  </update>
</mapper>