<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="TeamB.GraduateJob.dao.mapper.noticeMapper" >
  <resultMap id="BaseResultMap" type="TeamB.GraduateJob.po.notice" >
    <id column="noticeId" property="noticeid" jdbcType="INTEGER" />
    <result column="userId" property="userid" jdbcType="INTEGER" />
    <result column="source" property="source" jdbcType="VARCHAR" />
    <result column="simpleNotice" property="simplenotice" jdbcType="VARCHAR" />
    <result column="detailNotice" property="detailnotice" jdbcType="VARCHAR" />
    <result column="date" property="date" jdbcType="DATE" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    noticeId, userId, source, simpleNotice, detailNotice, date
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="TeamB.GraduateJob.po.noticeExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from notice
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from notice
    where noticeId = #{noticeid,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from notice
    where noticeId = #{noticeid,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="TeamB.GraduateJob.po.noticeExample" >
    delete from notice
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="TeamB.GraduateJob.po.notice" >
    insert into notice (noticeId, userId, source, 
      simpleNotice, detailNotice, date
      )
    values (#{noticeid,jdbcType=INTEGER}, #{userid,jdbcType=INTEGER}, #{source,jdbcType=VARCHAR}, 
      #{simplenotice,jdbcType=VARCHAR}, #{detailnotice,jdbcType=VARCHAR}, #{date,jdbcType=DATE}
      )
  </insert>
  <insert id="insertSelective" parameterType="TeamB.GraduateJob.po.notice" >
    insert into notice
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="noticeid != null" >
        noticeId,
      </if>
      <if test="userid != null" >
        userId,
      </if>
      <if test="source != null" >
        source,
      </if>
      <if test="simplenotice != null" >
        simpleNotice,
      </if>
      <if test="detailnotice != null" >
        detailNotice,
      </if>
      <if test="date != null" >
        date,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="noticeid != null" >
        #{noticeid,jdbcType=INTEGER},
      </if>
      <if test="userid != null" >
        #{userid,jdbcType=INTEGER},
      </if>
      <if test="source != null" >
        #{source,jdbcType=VARCHAR},
      </if>
      <if test="simplenotice != null" >
        #{simplenotice,jdbcType=VARCHAR},
      </if>
      <if test="detailnotice != null" >
        #{detailnotice,jdbcType=VARCHAR},
      </if>
      <if test="date != null" >
        #{date,jdbcType=DATE},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="TeamB.GraduateJob.po.noticeExample" resultType="java.lang.Integer" >
    select count(*) from notice
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update notice
    <set >
      <if test="record.noticeid != null" >
        noticeId = #{record.noticeid,jdbcType=INTEGER},
      </if>
      <if test="record.userid != null" >
        userId = #{record.userid,jdbcType=INTEGER},
      </if>
      <if test="record.source != null" >
        source = #{record.source,jdbcType=VARCHAR},
      </if>
      <if test="record.simplenotice != null" >
        simpleNotice = #{record.simplenotice,jdbcType=VARCHAR},
      </if>
      <if test="record.detailnotice != null" >
        detailNotice = #{record.detailnotice,jdbcType=VARCHAR},
      </if>
      <if test="record.date != null" >
        date = #{record.date,jdbcType=DATE},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update notice
    set noticeId = #{record.noticeid,jdbcType=INTEGER},
      userId = #{record.userid,jdbcType=INTEGER},
      source = #{record.source,jdbcType=VARCHAR},
      simpleNotice = #{record.simplenotice,jdbcType=VARCHAR},
      detailNotice = #{record.detailnotice,jdbcType=VARCHAR},
      date = #{record.date,jdbcType=DATE}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="TeamB.GraduateJob.po.notice" >
    update notice
    <set >
      <if test="userid != null" >
        userId = #{userid,jdbcType=INTEGER},
      </if>
      <if test="source != null" >
        source = #{source,jdbcType=VARCHAR},
      </if>
      <if test="simplenotice != null" >
        simpleNotice = #{simplenotice,jdbcType=VARCHAR},
      </if>
      <if test="detailnotice != null" >
        detailNotice = #{detailnotice,jdbcType=VARCHAR},
      </if>
      <if test="date != null" >
        date = #{date,jdbcType=DATE},
      </if>
    </set>
    where noticeId = #{noticeid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="TeamB.GraduateJob.po.notice" >
    update notice
    set userId = #{userid,jdbcType=INTEGER},
      source = #{source,jdbcType=VARCHAR},
      simpleNotice = #{simplenotice,jdbcType=VARCHAR},
      detailNotice = #{detailnotice,jdbcType=VARCHAR},
      date = #{date,jdbcType=DATE}
    where noticeId = #{noticeid,jdbcType=INTEGER}
  </update>
</mapper>