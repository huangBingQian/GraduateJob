<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="TeamB.GraduateJob.dao.mapper.jian_liMapper" >
  <resultMap id="BaseResultMap" type="TeamB.GraduateJob.po.jian_li" >
    <id column="userId" property="userid" jdbcType="INTEGER" />
    <result column="phoneNum" property="phonenum" jdbcType="INTEGER" />
    <result column="email" property="email" jdbcType="VARCHAR" />
    <result column="ability" property="ability" jdbcType="VARCHAR" />
    <result column="experience" property="experience" jdbcType="VARCHAR" />
  </resultMap>
  <resultMap id="ResultMapWithBLOBs" type="TeamB.GraduateJob.po.jian_li" extends="BaseResultMap" >
    <result column="file" property="file" jdbcType="LONGVARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    userId, phoneNum, email, ability, experience
  </sql>
  <sql id="Blob_Column_List" >
    file
  </sql>
  <select id="selectByExampleWithBLOBs" resultMap="ResultMapWithBLOBs" parameterType="TeamB.GraduateJob.po.jian_liExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from jian_li
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="TeamB.GraduateJob.po.jian_liExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from jian_li
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="ResultMapWithBLOBs" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from jian_li
    where userId = #{userid,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from jian_li
    where userId = #{userid,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="TeamB.GraduateJob.po.jian_liExample" >
    delete from jian_li
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="TeamB.GraduateJob.po.jian_li" >
    insert into jian_li (userId, phoneNum, email, 
      ability, experience, file
      )
    values (#{userid,jdbcType=INTEGER}, #{phonenum,jdbcType=INTEGER}, #{email,jdbcType=VARCHAR}, 
      #{ability,jdbcType=VARCHAR}, #{experience,jdbcType=VARCHAR}, #{file,jdbcType=LONGVARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="TeamB.GraduateJob.po.jian_li" >
    insert into jian_li
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="userid != null" >
        userId,
      </if>
      <if test="phonenum != null" >
        phoneNum,
      </if>
      <if test="email != null" >
        email,
      </if>
      <if test="ability != null" >
        ability,
      </if>
      <if test="experience != null" >
        experience,
      </if>
      <if test="file != null" >
        file,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="userid != null" >
        #{userid,jdbcType=INTEGER},
      </if>
      <if test="phonenum != null" >
        #{phonenum,jdbcType=INTEGER},
      </if>
      <if test="email != null" >
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="ability != null" >
        #{ability,jdbcType=VARCHAR},
      </if>
      <if test="experience != null" >
        #{experience,jdbcType=VARCHAR},
      </if>
      <if test="file != null" >
        #{file,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="TeamB.GraduateJob.po.jian_liExample" resultType="java.lang.Integer" >
    select count(*) from jian_li
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update jian_li
    <set >
      <if test="record.userid != null" >
        userId = #{record.userid,jdbcType=INTEGER},
      </if>
      <if test="record.phonenum != null" >
        phoneNum = #{record.phonenum,jdbcType=INTEGER},
      </if>
      <if test="record.email != null" >
        email = #{record.email,jdbcType=VARCHAR},
      </if>
      <if test="record.ability != null" >
        ability = #{record.ability,jdbcType=VARCHAR},
      </if>
      <if test="record.experience != null" >
        experience = #{record.experience,jdbcType=VARCHAR},
      </if>
      <if test="record.file != null" >
        file = #{record.file,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map" >
    update jian_li
    set userId = #{record.userid,jdbcType=INTEGER},
      phoneNum = #{record.phonenum,jdbcType=INTEGER},
      email = #{record.email,jdbcType=VARCHAR},
      ability = #{record.ability,jdbcType=VARCHAR},
      experience = #{record.experience,jdbcType=VARCHAR},
      file = #{record.file,jdbcType=LONGVARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update jian_li
    set userId = #{record.userid,jdbcType=INTEGER},
      phoneNum = #{record.phonenum,jdbcType=INTEGER},
      email = #{record.email,jdbcType=VARCHAR},
      ability = #{record.ability,jdbcType=VARCHAR},
      experience = #{record.experience,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="TeamB.GraduateJob.po.jian_li" >
    update jian_li
    <set >
      <if test="phonenum != null" >
        phoneNum = #{phonenum,jdbcType=INTEGER},
      </if>
      <if test="email != null" >
        email = #{email,jdbcType=VARCHAR},
      </if>
      <if test="ability != null" >
        ability = #{ability,jdbcType=VARCHAR},
      </if>
      <if test="experience != null" >
        experience = #{experience,jdbcType=VARCHAR},
      </if>
      <if test="file != null" >
        file = #{file,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where userId = #{userid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="TeamB.GraduateJob.po.jian_li" >
    update jian_li
    set phoneNum = #{phonenum,jdbcType=INTEGER},
      email = #{email,jdbcType=VARCHAR},
      ability = #{ability,jdbcType=VARCHAR},
      experience = #{experience,jdbcType=VARCHAR},
      file = #{file,jdbcType=LONGVARCHAR}
    where userId = #{userid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="TeamB.GraduateJob.po.jian_li" >
    update jian_li
    set phoneNum = #{phonenum,jdbcType=INTEGER},
      email = #{email,jdbcType=VARCHAR},
      ability = #{ability,jdbcType=VARCHAR},
      experience = #{experience,jdbcType=VARCHAR}
    where userId = #{userid,jdbcType=INTEGER}
  </update>
</mapper>